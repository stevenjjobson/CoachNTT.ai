{
  "name": "coachntt",
  "displayName": "CoachNTT - AI Coding Assistant",
  "description": "Cognitive coding partner with voice interaction and real-time monitoring",
  "version": "0.1.0",
  "publisher": "coachntt",
  "engines": {
    "vscode": "^1.85.0"
  },
  "categories": [
    "AI",
    "Other",
    "Programming Languages"
  ],
  "keywords": [
    "ai",
    "assistant",
    "voice",
    "monitoring",
    "cognitive"
  ],
  "icon": "resources/icons/coachntt-128.png",
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "configuration": {
      "title": "CoachNTT",
      "properties": {
        "coachntt.apiUrl": {
          "type": "string",
          "default": "http://localhost:8000",
          "description": "Backend API URL for local development",
          "order": 1
        },
        "coachntt.vpsUrl": {
          "type": "string",
          "default": "",
          "description": "VPS API URL for production deployment",
          "order": 2
        },
        "coachntt.websocketUrl": {
          "type": "string",
          "default": "ws://localhost:8000/ws",
          "description": "WebSocket URL for real-time updates",
          "order": 3
        },
        "coachntt.safetyValidation": {
          "type": "boolean",
          "default": true,
          "description": "Enable safety validation for all operations",
          "order": 4
        },
        "coachntt.minSafetyScore": {
          "type": "number",
          "default": 0.8,
          "minimum": 0,
          "maximum": 1,
          "description": "Minimum safety score required (0.0-1.0)",
          "order": 5
        },
        "coachntt.autoConnect": {
          "type": "boolean",
          "default": false,
          "description": "Automatically connect to backend on startup",
          "order": 6
        },
        "coachntt.logLevel": {
          "type": "string",
          "default": "info",
          "enum": ["debug", "info", "warn", "error"],
          "enumDescriptions": [
            "Show all logs including debug information",
            "Show informational messages and above",
            "Show warnings and errors only",
            "Show errors only"
          ],
          "description": "Logging level for extension output",
          "order": 7
        },
        "coachntt.authToken": {
          "type": "string",
          "default": "",
          "description": "JWT authentication token (stored securely)",
          "order": 8,
          "markdownDescription": "Your JWT authentication token. This will be stored securely in VSCode's secret storage. Leave empty to prompt for token on connection."
        },
        "coachntt.memoryView.groupByIntent": {
          "type": "boolean",
          "default": true,
          "description": "Group memories by intent in tree view",
          "order": 10
        },
        "coachntt.memoryView.showArchived": {
          "type": "boolean",
          "default": false,
          "description": "Show archived memories in tree view",
          "order": 11
        },
        "coachntt.memoryView.sortBy": {
          "type": "string",
          "default": "timestamp",
          "enum": ["timestamp", "importance", "reinforcement"],
          "enumDescriptions": [
            "Sort by creation time",
            "Sort by importance score",
            "Sort by reinforcement count"
          ],
          "description": "Sort order for memories",
          "order": 12
        },
        "coachntt.memoryView.sortOrder": {
          "type": "string",
          "default": "desc",
          "enum": ["asc", "desc"],
          "enumDescriptions": [
            "Ascending order",
            "Descending order"
          ],
          "description": "Sort direction for memories",
          "order": 13
        },
        "coachntt.memoryView.pageSize": {
          "type": "number",
          "default": 50,
          "minimum": 10,
          "maximum": 200,
          "description": "Number of memories to load per page",
          "order": 14
        }
      }
    },
    "commands": [
      {
        "command": "coachntt.connect",
        "title": "Connect to Backend",
        "category": "CoachNTT",
        "icon": "$(plug)"
      },
      {
        "command": "coachntt.disconnect",
        "title": "Disconnect from Backend",
        "category": "CoachNTT",
        "icon": "$(debug-disconnect)"
      },
      {
        "command": "coachntt.showLogs",
        "title": "Show Extension Logs",
        "category": "CoachNTT",
        "icon": "$(output)"
      },
      {
        "command": "coachntt.openSettings",
        "title": "Open Extension Settings",
        "category": "CoachNTT",
        "icon": "$(settings-gear)"
      },
      {
        "command": "coachntt.refreshView",
        "title": "Refresh CoachNTT View",
        "category": "CoachNTT",
        "icon": "$(refresh)"
      },
      {
        "command": "coachntt.checkStatus",
        "title": "Check Connection Status",
        "category": "CoachNTT",
        "icon": "$(info)"
      },
      {
        "command": "coachntt.refreshMemories",
        "title": "Refresh Memories",
        "category": "CoachNTT: Memory",
        "icon": "$(refresh)"
      },
      {
        "command": "coachntt.searchMemories",
        "title": "Search Memories",
        "category": "CoachNTT: Memory",
        "icon": "$(search)"
      },
      {
        "command": "coachntt.clearSearch",
        "title": "Clear Search",
        "category": "CoachNTT: Memory",
        "icon": "$(close)",
        "enablement": "coachntt.memorySearchActive"
      },
      {
        "command": "coachntt.createMemory",
        "title": "Create Memory",
        "category": "CoachNTT: Memory",
        "icon": "$(add)"
      },
      {
        "command": "coachntt.createMemoryFromSelection",
        "title": "Create Memory from Selection",
        "category": "CoachNTT: Memory",
        "icon": "$(add)",
        "enablement": "editorHasSelection"
      },
      {
        "command": "coachntt.viewMemory",
        "title": "View Memory",
        "category": "CoachNTT: Memory",
        "icon": "$(eye)"
      },
      {
        "command": "coachntt.editMemory",
        "title": "Edit Memory",
        "category": "CoachNTT: Memory",
        "icon": "$(edit)"
      },
      {
        "command": "coachntt.deleteMemory",
        "title": "Delete Memory",
        "category": "CoachNTT: Memory",
        "icon": "$(trash)"
      },
      {
        "command": "coachntt.reinforceMemory",
        "title": "Reinforce Memory",
        "category": "CoachNTT: Memory",
        "icon": "$(star)"
      },
      {
        "command": "coachntt.exportMemories",
        "title": "Export Memories",
        "category": "CoachNTT: Memory",
        "icon": "$(export)"
      },
      {
        "command": "coachntt.importMemories",
        "title": "Import Memories",
        "category": "CoachNTT: Memory",
        "icon": "$(cloud-download)"
      },
      {
        "command": "coachntt.configureMemoryView",
        "title": "Configure Memory View",
        "category": "CoachNTT: Memory",
        "icon": "$(settings-gear)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "coachntt",
          "title": "CoachNTT",
          "icon": "resources/icons/coachntt-activity.svg"
        }
      ]
    },
    "views": {
      "coachntt": [
        {
          "id": "coachntt.welcome",
          "name": "Welcome",
          "icon": "$(home)",
          "contextualTitle": "CoachNTT Welcome"
        },
        {
          "id": "coachntt.memories",
          "name": "Memories",
          "icon": "$(archive)",
          "contextualTitle": "CoachNTT Memories",
          "visibility": "visible",
          "when": "coachntt.connected"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "coachntt.refreshView",
          "when": "view == coachntt.welcome",
          "group": "navigation"
        },
        {
          "command": "coachntt.refreshMemories",
          "when": "view == coachntt.memories",
          "group": "navigation@1"
        },
        {
          "command": "coachntt.searchMemories",
          "when": "view == coachntt.memories",
          "group": "navigation@2"
        },
        {
          "command": "coachntt.createMemory",
          "when": "view == coachntt.memories",
          "group": "navigation@3"
        },
        {
          "command": "coachntt.clearSearch",
          "when": "view == coachntt.memories && coachntt.memorySearchActive",
          "group": "navigation@4"
        },
        {
          "command": "coachntt.configureMemoryView",
          "when": "view == coachntt.memories",
          "group": "2_configure"
        }
      ],
      "view/item/context": [
        {
          "command": "coachntt.viewMemory",
          "when": "view == coachntt.memories && viewItem == memory",
          "group": "1_view"
        },
        {
          "command": "coachntt.editMemory",
          "when": "view == coachntt.memories && viewItem == memory",
          "group": "2_modify@1"
        },
        {
          "command": "coachntt.reinforceMemory",
          "when": "view == coachntt.memories && viewItem == memory",
          "group": "2_modify@2"
        },
        {
          "command": "coachntt.deleteMemory",
          "when": "view == coachntt.memories && viewItem == memory",
          "group": "3_delete"
        }
      ],
      "editor/context": [
        {
          "command": "coachntt.createMemoryFromSelection",
          "when": "editorHasSelection",
          "group": "coachntt@1"
        }
      ],
      "commandPalette": [
        {
          "command": "coachntt.disconnect",
          "when": "coachntt.connected"
        },
        {
          "command": "coachntt.connect",
          "when": "!coachntt.connected"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "webpack --mode production",
    "watch": "webpack --mode development --watch",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "18.x",
    "@types/sinon": "^17.0.2",
    "@types/vscode": "^1.85.0",
    "@types/ws": "^8.5.10",
    "@typescript-eslint/eslint-plugin": "^6.15.0",
    "@typescript-eslint/parser": "^6.15.0",
    "@vscode/test-electron": "^2.3.8",
    "eslint": "^8.56.0",
    "glob": "^10.3.10",
    "mocha": "^10.2.0",
    "sinon": "^17.0.1",
    "ts-loader": "^9.5.1",
    "typescript": "^5.3.3",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "ws": "^8.16.0",
    "eventemitter3": "^5.0.1",
    "p-retry": "^5.1.2"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/coachntt/vscode-extension"
  },
  "bugs": {
    "url": "https://github.com/coachntt/vscode-extension/issues"
  },
  "homepage": "https://github.com/coachntt/vscode-extension#readme",
  "license": "MIT",
  "galleryBanner": {
    "color": "#1e1e1e",
    "theme": "dark"
  },
  "badges": [
    {
      "url": "https://img.shields.io/badge/Safety-First-green",
      "href": "https://github.com/coachntt/vscode-extension",
      "description": "Safety-first design"
    }
  ]
}